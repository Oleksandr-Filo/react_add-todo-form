{"version":3,"sources":["api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","UserInfo","user","className","href","TodoInfo","todo","title","completed","classNames","TodoList","todos","map","getUserById","users","find","todoList","userId","usersFromServer","App","userDefaultValue","useState","setTitle","setUser","setTodos","isUserSelected","setIsUserSelected","isTitleEntered","setIsTitleEntered","action","method","onSubmit","event","preventDefault","newUser","getUserByName","newTodoId","sort","todo1","todo2","getLargestTodoId","newTodo","currentTodo","htmlFor","type","placeholder","value","onChange","currentTarget","autoComplete","disabled","userInfo","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.56330139.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import React from 'react';\nimport { User } from '../../types/User';\n\ntype Props = {\n  user: User;\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  const { email, name } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\nimport { UserInfo } from '../UserInfo';\n\ntype Props = {\n  todo: Todo;\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const {\n    id,\n    title,\n    user,\n    completed,\n  } = todo;\n\n  return (\n    <article\n      data-id={id}\n      className={classNames(\n        'TodoInfo',\n        { 'TodoInfo--completed': completed },\n      )}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n\n      {user && <UserInfo user={user} />}\n    </article>\n  );\n};\n","import React from 'react';\nimport { Todo } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  todos: Todo[];\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map(todo => (\n        <TodoInfo key={todo.id} todo={todo} />\n      ))}\n    </section>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.scss';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\n\nimport { User } from './types/User';\nimport { Todo } from './types/Todo';\nimport { TodoList } from './components/TodoList';\n\nfunction getUserById(id: number, users: User[]) {\n  return users.find(user => id === user.id) as User;\n}\n\nconst todoList: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUserById(todo.userId, usersFromServer),\n}));\n\nfunction getUserByName(name: string, users: User[]) {\n  return users.find(user => name === user.name) as User;\n}\n\nfunction getLargestTodoId(todos: Todo[]) {\n  return [...todos].sort((todo1, todo2) => todo2.id - todo1.id)[0].id;\n}\n\nexport const App: React.FC = () => {\n  const titleDefaultValue = '';\n  const userDefaultValue = 'Choose a user';\n\n  const [title, setTitle] = useState(titleDefaultValue);\n  const [user, setUser] = useState(userDefaultValue);\n  const [todos, setTodos] = useState(todoList);\n  const [isUserSelected, setIsUserSelected] = useState(true);\n  const [isTitleEntered, setIsTitleEntered] = useState(true);\n\n  const handleSubmitForm = (event: React.FormEvent) => {\n    event.preventDefault();\n    if (user !== userDefaultValue && title !== titleDefaultValue) {\n      const newUser = getUserByName(user, usersFromServer);\n      const newTodoId = getLargestTodoId(todos) + 1;\n      const newTodo: Todo = {\n        id: newTodoId,\n        title,\n        completed: false,\n        userId: newUser.id,\n        user: newUser,\n      };\n\n      setTodos(currentTodo => [...currentTodo, newTodo]);\n      setTitle(titleDefaultValue);\n      setUser(userDefaultValue);\n    }\n\n    if (user === userDefaultValue) {\n      setIsUserSelected(false);\n    }\n\n    if (title === titleDefaultValue) {\n      setIsTitleEntered(false);\n    }\n  };\n\n  const handleTitleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(event.currentTarget.value);\n    setIsTitleEntered(true);\n  };\n\n  const handleUserChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setUser(event.currentTarget.value);\n    setIsUserSelected(true);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={handleSubmitForm}\n      >\n        <div className=\"field\">\n          <label htmlFor=\"titleInput\">\n            {'Title: '}\n          </label>\n\n          <input\n            type=\"text\"\n            id=\"titleInput\"\n            name=\"titleInput\"\n            data-cy=\"titleInput\"\n            placeholder=\"Enter a title\"\n            value={title}\n            onChange={handleTitleChange}\n            autoComplete=\"off\"\n          />\n          {!isTitleEntered && (\n            <span className=\"error\">Please enter a title</span>\n          )}\n        </div>\n\n        <div className=\"field\">\n          <label htmlFor=\"userSelect\">\n            {'User: '}\n          </label>\n\n          <select\n            id=\"userSelect\"\n            name=\"userSelect\"\n            data-cy=\"userSelect\"\n            value={user}\n            onChange={handleUserChange}\n          >\n            <option value={userDefaultValue} disabled>\n              {userDefaultValue}\n            </option>\n            {usersFromServer.map(userInfo => (\n              <option value={userInfo.name} key={userInfo.id}>\n                {userInfo.name}\n              </option>\n            ))}\n          </select>\n\n          {!isUserSelected && (\n            <span className=\"error\">Please choose a user</span>\n          )}\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}